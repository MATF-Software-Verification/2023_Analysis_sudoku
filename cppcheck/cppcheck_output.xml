<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.90"/>
    <errors>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/altproj.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/altproj.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../sudoku/altproj.cpp" file="../sudoku/solver.hpp" line="23" column="5"/>
            <symbol>Board</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/debug.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/debug.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../sudoku/debug.cpp" file="../sudoku/solver.hpp" line="23" column="5"/>
            <symbol>Board</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;solve&apos; shadows outer function" verbose="Local variable &apos;solve&apos; shadows outer function" cwe="398">
            <location file="../sudoku/debug.cpp" line="20" column="8" info="Shadow variable"/>
            <location file0="../sudoku/debug.cpp" file="../sudoku/solver.hpp" line="127" column="6" info="Shadowed declaration"/>
            <symbol>solve</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/game.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/game.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../sudoku/game.cpp" file="../sudoku/solver.hpp" line="23" column="5"/>
            <symbol>Board</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/main.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/main.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../sudoku/main.cpp" file="../sudoku/solver.hpp" line="23" column="5"/>
            <symbol>Board</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;method&apos; is assigned a value that is never used." verbose="Variable &apos;method&apos; is assigned a value that is never used." cwe="563">
            <location file="../sudoku/main.cpp" line="24" column="17"/>
            <symbol>method</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;method&apos; is assigned a value that is never used." verbose="Variable &apos;method&apos; is assigned a value that is never used." cwe="563">
            <location file="../sudoku/main.cpp" line="84" column="14"/>
            <symbol>method</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/solver.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/solver.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../sudoku/solver.cpp" file="../sudoku/solver.hpp" line="23" column="5"/>
            <symbol>Board</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="../sudoku/solver.cpp" line="261" column="9"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;y&apos; can be reduced." verbose="The scope of the variable &apos;y&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="../sudoku/solver.cpp" line="261" column="12"/>
            <symbol>y</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rindex&apos; can be reduced." verbose="The scope of the variable &apos;rindex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="../sudoku/solver.cpp" line="284" column="9"/>
            <symbol>rindex</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;temp&apos; can be reduced." verbose="The scope of the variable &apos;temp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="../sudoku/solver.cpp" line="285" column="9"/>
            <symbol>temp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;val&apos; is assigned a value that is never used." verbose="Variable &apos;val&apos; is assigned a value that is never used." cwe="563">
            <location file="../sudoku/solver.cpp" line="80" column="13"/>
            <symbol>val</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/tests.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Board&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="../sudoku/tests.cpp" file="../sudoku/solver.hpp" line="26" column="9"/>
            <symbol>Board</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Board&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="../sudoku/tests.cpp" file="../sudoku/solver.hpp" line="23" column="5"/>
            <symbol>Board</symbol>
        </error>
    </errors>
</results>
