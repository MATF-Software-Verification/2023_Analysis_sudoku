../sudoku/solver.hpp:26:9: warning: Class 'Board' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
        grid = new int*[N];
        ^
../sudoku/solver.hpp:26:9: warning: Class 'Board' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
        grid = new int*[N];
        ^
../sudoku/solver.hpp:23:5: style: Class 'Board' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Board(int _N) : N(_N){
    ^
../sudoku/debug.cpp:20:8: style: Local variable 'solve' shadows outer function [shadowFunction]
  bool solve = matt.checkPuzzle();
       ^
../sudoku/solver.hpp:127:6: note: Shadowed declaration
bool solve(Board &b, int row, int col);
     ^
../sudoku/debug.cpp:20:8: note: Shadow variable
  bool solve = matt.checkPuzzle();
       ^
../sudoku/main.cpp:24:17: style: Variable 'method' is assigned a value that is never used. [unreadVariable]
  string method = "backtrace"; // choose solving method
                ^
../sudoku/main.cpp:84:14: style: Variable 'method' is assigned a value that is never used. [unreadVariable]
      method = "RP";
             ^
../sudoku/solver.cpp:261:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
../sudoku/solver.cpp:261:12: style: The scope of the variable 'y' can be reduced. [variableScope]
    int x, y;
           ^
../sudoku/solver.cpp:284:9: style: The scope of the variable 'rindex' can be reduced. [variableScope]
    int rindex;
        ^
../sudoku/solver.cpp:285:9: style: The scope of the variable 'temp' can be reduced. [variableScope]
    int temp;
        ^
../sudoku/solver.cpp:80:13: style: Variable 'val' is assigned a value that is never used. [unreadVariable]
    int val = 0;
            ^
